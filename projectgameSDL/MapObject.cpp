#include"MapObject.h"
#include"ObjectTextureManager.h"
#include"GameControl.h"
#include<iostream>


Map* Map::instance = 0;




int encodeMap1[map_height][map_width] = {
	{295,296,297,298,299,0,311,0,238,239,0,0,0,410,411,412,413,414,406,407,408,409,0,0,0,0,270,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,0,0,134,135,136,137,138,139 },
	{314,315,316,317,318,0,311,0,257,258,0,0,0,429,430,431,432,433,425,426,427,428,403,404,405,0,289,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,0,0,153,154,155,156,157,158},
	{333,334,335,336,337,0,311,0,276,277,0,0,0,448,449,450,451,452,444,445,446,447,422,423,424,0,0,0,0,0,0,0,0,0,0,0,357,358,359,360,361,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,231,0,0,0,0,0,0,49,49,49,49,49,0,0,172,173,174,175,176,177},
	{295,296,297,298,299,0,311,0,257,258,0,0,0,467,468,469,470,471,463,464,465,466,441,442,443,0,0,0,0,0,0,0,0,0,0,0,376,377,378,379,380,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,0,0,0,191,192,193,194,195,196},
	{314,315,316,317,318,0,311,0,276,277,0,0,0,0,49,49,49,0,0,0,0,0,460,461,462,0,0,0,0,0,0,0,0,0,0,0,395,396,397,398,399,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,0,0,0,0,0,0,0,0,0,0},
	{333,334,335,336,337,0,311,0,0,0,0,0,0,0,49,49,49,0,785,786,787,788,789,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,49,0,0,0,0,0,231,0,0,0,0},
	{300,301,302,303,304,0,311,0,6,6,6,6,6,6,6,49,49,0,804,805,806,807,808,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,49,49,49,0,0,0,0,0,0,0,0,0},
	{319,320,321,322,323,0,311,0,6,6,6,6,6,6,6,49,49,0,823,824,825,826,827,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,49,0,49,49,49,0,0,0,0,0,0,0,0,0},
	{338,339,340,341,342,0,311,0,6,6,12,13,14,6,6,49,49,0,842,843,844,845,846,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,242,243,0,0,0,0,0,0,0,49,49,49,49,49,49,49,49,0,0,0,49,49,0,0,0,0,0,0,0,0,0},
	{300,301,302,303,304,0,311,0,6,6,31,32,33,6,6,49,49,0,0,0,0,0,0,294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,261,262,0,0,0,0,0,49,49,49,49,49,49,49,49,49,0,0,0,0,49,49,0,0,0,0,0,0,0,0,0},
	{319,320,321,322,323,0,311,0,6,6,50,51,52,6,6,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,280,281,0,0,0,0,49,49,49,49,0,0,0,0,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0,0,0},
	{338,339,340,341,342,0,311,0,6,6,6,6,6,6,6,0,0,0,385,386,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,0,0,0,0,0,0,0,0},
	{6,6,6,6,6,6,291,291,291,291,291,291,291,291,291,291,291,291,291,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,0,0,0,0,0,0,0,0,0,0,0,231,0,49,49,49,0,0,0,0,0,0,0,0},
	{6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,231,0,0,0,0,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,231,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0,0},
	{6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0,0},
	{6,6,6,6,6,6,0,0,0,0,0,240,241,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0,0},
	{6,6,6,6,6,6,0,0,0,0,0,259,260,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,0,0,242,243,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0,0},
	{6,6,6,6,6,6,0,0,0,0,0,278,279,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,49,0,0,0,261,262,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0,0},
	{6,6,240,241,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,0,0,0,0,0,0,280,281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0,0},
	{6,6,259,260,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,231,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0,0},
	{6,6,278,279,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0,0},
	{6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0,0},
	{6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0,0},
	{6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,231,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,0,0,0,242,243,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,0,0,0,0,0,261,262,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,231,0,0,0,0,0,49,49,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,242,243,0,0,0,0,0,0,49,49,49,49,0,0,0,0,0,0,280,281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,261,262,0,0,0,0,0,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,586,587,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,280,281,0,0,0,0,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,605,606,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,586,587,0,0,0,0,0,0,0,0,586,587,587,0,0,0,0,0,0,0,0,0,0,0,0,0,586,587,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,0,0,0,0,229,230,0},
	{0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,605,606,0,0,0,0,0,0,0,0,605,606,606,0,0,0,0,0,0,0,0,0,0,0,0,0,605,606,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,249,0},
	{0,0,0,0,0,0,0,0,49,49,49,49,49,49,49,0,0,0,586,587,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,628,629,630,631,632,0,267,268,0},
	{0,0,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,0,605,606,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,0,647,648,649,650,651,0,0,0,0},
	{49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,0,0,0,714,715,716,717,718,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,70,71,72,41,105,105,105,105,105,105,105,105,40,6,0,666,667,668,669,670,0,0,0,0},
	{49,49,49,49,0,0,0,0,0,0,0,0,0,785,786,787,788,789,733,734,735,736,737,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,90,91,15,105,105,105,105,105,105,105,105,34,6,0,685,686,687,638,639,640,641,642,643},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,804,805,806,807,808,752,753,754,755,756,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,0,0,0,108,109,110,15,105,105,105,105,105,105,105,105,34,6,0,0,0,0,657,658,659,660,661,662},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,823,824,825,826,827,771,772,773,774,775,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,269,0,0,0,0,0,0,0,6,15,105,105,105,105,105,105,105,105,34,6,0,0,0,0,676,677,678,679,680,681},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,842,843,844,845,846,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,22,105,105,105,105,105,105,105,105,21,6,0,0,0,0,695,696,697,698,699,700}


};



int encodeMap2[map_height][map_width] = {
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,486,487,488,0,0,0,0,295,296,297,298,299,0,0,0,234,567,568,0,558,559,560,561,410,411,412,413,414,5,5,5,5,5,5,5,5,5 },
	{0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,505,506,507,0,0,0,0,314,315,316,317,318,0,0,0,0,586,587,0,577,578,579,580,429,430,431,432,433,5,134,135,136,137,138,139,5,5},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0,0,524,525,526,0,0,0,0,333,334,335,336,337,0,0,0,0,605,606,0,596,597,598,599,448,449,450,451,452,5,153,154,155,156,157,158,5,5},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,543,544,545,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,615,616,617,618,467,468,469,470,471,5,172,173,174,175,176,177,5,5},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,230,231,232,233,234,235,0,0,0,0,0,5,191,192,193,194,195,196,5,5},
	{0,0,0,0,0,0,0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,58,59,60,5,5,5},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,242,243,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,77,78,79,5,5,5},
	{0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,261,262,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,96,97,98,5,5,5},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,280,281,0,0,0,0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,115,116,117,5,5,5},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,58,59,60,5,5,5},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,77,78,79,5,5,5},
	{0,0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,96,97,98,5,5,5},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,115,116,117,5,5,5},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,246,247,0,0,0,0,0,0,0,0,0,0,5,5,5,58,59,60,5,5,5},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,217,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,265,266,0,0,0,0,0,0,0,0,0,0,5,5,5,77,78,79,5,5,5},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,217,238,239,0,0,0,0,0,0,0,0,0,0,0,217,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,284,285,0,0,0,0,0,0,0,0,0,0,5,5,5,96,97,98,5,5,5},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,217,257,258,0,0,0,0,0,0,0,0,0,0,0,236,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,115,116,117,5,5,5},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,217,276,277,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,49,49,49,49,0,5,5,5,5,5,5,5,5,5},
	{23,24,25,26,27,28,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,49,49,49,49,49,49,49,5,5,5,5,5,5,5,5},
	{42,43,44,45,46,47,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,0,49,49,49,49,49,5,5,5,5,5,5,5,5},
	{61,62,63,64,65,66,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5},
	{49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5},
	{49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5},
	{49,49,49,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,246,247,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5},
	{49,49,49,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,265,266,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5},
	{49,49,49,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,284,285,0,0,0,0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5},
	{49,49,49,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5},
	{49,49,49,49,49,49,49,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,12,13,14,5,5,5},
	{49,49,49,49,49,49,49,714,715,716,717,718,710,711,712,713,707,708,709,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,31,32,33,5,5,5},
	{49,49,49,49,49,49,49,733,734,735,736,737,729,730,731,732,726,727,728,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,511,511,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,50,51,52,5,5,5},
	{49,49,49,49,49,49,49,752,753,754,755,756,748,749,750,751,745,746,747,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,68,69,5,5,5,5},
	{49,49,49,49,49,49,49,771,772,773,774,775,767,768,769,770,764,765,766,230,231,232,233,234,235,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,105,105,105,87,88,105,105,105,105},
	{5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,15,105,105,105,106,107,105,105,105,105},
	{5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,15,105,105,105,125,126,82,83,84,85},
	{5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,15,105,105,105,99,100,101,102,103,104},
	{5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,15,105,105,105,118,119,120,121,122,123},
	{300,301,302,303,304,300,301,302,303,304,300,301,302,303,304,300,301,302,303,304,300,301,302,303,304,300,301,302,303,304,352,353,354,355,356,352,353,354,355,356,357,358,359,360,361,357,358,359,360,361,357,358,359,360,361,238,239,238,239,238,239,238,239,300,301,302,303,304,300,301,302,303,304,300,301,302,303,304,240,241},
    {319,320,321,322,323,319,320,321,322,323,319,320,321,322,323,319,320,321,322,323,319,320,321,322,323,319,320,321,322,323,371,372,373,374,375,371,372,373,374,375,376,377,378,379,380,376,377,378,379,380,376,377,378,379,380,257,258,257,258,257,258,257,258,319,320,321,322,323,319,320,321,322,323,319,320,321,322,323,259,260},
    {338,339,340,341,342,338,339,340,341,342,338,339,340,341,342,338,339,340,341,342,338,339,340,341,342,338,339,340,341,342,390,391,392,393,394,390,391,392,393,394,395,396,397,398,399,395,396,397,398,399,395,396,397,398,399,276,277,276,277,276,277,276,277,338,339,340,341,342,338,339,340,341,342,338,339,340,341,342,278,279}


};


Map::Map() {
	
	ObjectTextureManager::getInstance()->loadTexture("C:/projectgameSDL/projectgameSDL/tileset map.png", "tileset", GameControl::getInstance()->getRenderer());


	int z = 1;
	for (int i = 0; i < tileset_height; i++) {
		for (int j = 0; j < tileset_width; j++) {
			mp[z] = std::make_pair(j * 32, i * 32);
			z++;
		}
	}


	std::cout << "load map\n";
}

void Map::changeMap(int idMap) {
	if (idMap == 1) {
		LoadMap(encodeMap1);
	}
	else if (idMap == 2) {
		LoadMap(encodeMap2);
	}
}



void Map::LoadMap(int arr[map_height][map_width]) {
	for (int row = 0; row < map_height; row++) {
		for (int col = 0; col < map_width; col++) {
			map[row][col] = arr[row][col];
		}
	}
}


void Map::DrawMap() {
	for (int row = 0; row < map_height; row++) {
		for (int col = 0; col < map_width; col++) {
			ObjectTextureManager::getInstance()->drawTile("tileset", col * 32, row * 32, mp[map[row][col]].first, mp[map[row][col]].second, 32, 32, GameControl::getInstance()->getRenderer());
		}
	}
}

bool Map::MapCollision(GameObject*player) {
	
	int x = player->getPos().getX() / 32+1;
	int y = player->getPos().getY() / 32+1;
	std::cout << x << " " << y <<" " << map[y][x] << std::endl;
	if (map[y][x] != 0) {
		return true;
	}
	
	return false;
}

